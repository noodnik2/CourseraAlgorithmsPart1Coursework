See the Assessment Guide for information on how to interpret this report.

ASSESSMENT SUMMARY

Compilation:  PASSED
API:          PASSED

Findbugs:     PASSED
PMD:          PASSED
Checkstyle:   FAILED (1 error, 17 warnings)

Correctness:  No tests available for autograding.
Memory:       No tests available for autograding.
Timing:       No tests available for autograding.

Aggregate score: 10.00%
[Compilation: 5%, API: 5%, Findbugs: 0%, PMD: 0%, Checkstyle: 0%, Correctness: 60%, Memory: 10%, Timing: 20%]

ASSESSMENT DETAILS

The following files were submitted:
----------------------------------
 11K Mar 28 06:55 Board.java
5.9K Mar 28 06:55 Solver.java


********************************************************************************
*  COMPILING
********************************************************************************


% javac Board.java
*-----------------------------------------------------------

% javac Solver.java
*-----------------------------------------------------------


================================================================


Checking the APIs of your programs.
*-----------------------------------------------------------
Board:

Solver:

================================================================


********************************************************************************
*  CHECKING STYLE AND COMMON BUG PATTERNS
********************************************************************************


% findbugs *.class
*-----------------------------------------------------------


================================================================


% pmd .
*-----------------------------------------------------------
Board.java:157: Instance (and static) variables should be declared at the top of the class, before any method declarations, constructors, or nested classes. [FieldDeclarationsShouldBeAtStartOfClass]
PMD ends with 1 warning.


================================================================


% checkstyle *.java
*-----------------------------------------------------------
[ERROR] Board.java:95:9: Do not use static initializers in this course. [StaticInitializer]
[WARN] Board.java:81:26: The instance variable '_values' must start with a lowercase letter and use camelCase. [MemberName]
[WARN] Board.java:82:25: The instance variable '_hammingDistance' must start with a lowercase letter and use camelCase. [MemberName]
[WARN] Board.java:83:25: The instance variable '_manhattanDistance' must start with a lowercase letter and use camelCase. [MemberName]
[WARN] Board.java:87:22: The instance variable '_manhattanDistances' must start with a lowercase letter and use camelCase. [MemberName]
[WARN] Board.java:88:22: The instance variable '_posToRow' must start with a lowercase letter and use camelCase. [MemberName]
[WARN] Board.java:89:22: The instance variable '_posToCol' must start with a lowercase letter and use camelCase. [MemberName]
[WARN] Board.java:90:19: The instance variable '_dim' must start with a lowercase letter and use camelCase. [MemberName]
[WARN] Board.java:92:9: Declare static variables before instance variables, constructors, and methods. [DeclarationOrder]
[WARN] Board.java:93:9: Declare static variables before instance variables, constructors, and methods. [DeclarationOrder]
[WARN] Board.java:157:5: Declare static variables before instance variables, constructors, and methods. [DeclarationOrder]
[WARN] Board.java:237:27: Do not use the 'instanceof' operator in this course. Use 'getClass()' to compare classes. [IllegalToken]
[WARN] Board.java:292:7: The comment is empty. [EmptyComment]
[WARN] Board.java:294:7: The comment is empty. [EmptyComment]
[WARN] Board.java:336:7: The comment is empty. [EmptyComment]
[WARN] Board.java:338:7: The comment is empty. [EmptyComment]
[WARN] Solver.java:159:14: 'while' is not followed by whitespace. [WhitespaceAfter]
Checkstyle ends with 1 error and 16 warnings.

% custom checkstyle checks for Board.java
*-----------------------------------------------------------
[WARN] Board.java:79:1: Defining a nested class in this program suggests poor design. [DescendantToken]
Checkstyle ends with 0 errors and 1 warning.

% custom checkstyle checks for Solver.java
*-----------------------------------------------------------


================================================================


ABORTING: you must fix any Checkstyle errors (not warnings).